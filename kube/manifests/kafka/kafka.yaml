apiVersion: v1
kind: Namespace
metadata:
  name: "kafka-cluster"
  labels:
    name: "kafka-cluster"

---

apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: "kafka-cluster"
  labels:
    app: kafka
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: kafka

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
  namespace: "kafka-cluster"
spec:
  selector:
    matchLabels:
      app: kafka 
  replicas: 3 
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: confluentinc/cp-kafka:latest
        env:
          - name: KAFKA_BROKER_ID
            value: 1
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper-1:2181,zookeeper-2:2181
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: PLAINTEXT
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: 1
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: kafka-logs
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: kafka-logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
